/* Copyright (C) 2018 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.0'
    }
}

allprojects {
    repositories {
        mavenCentral()
        maven {
            url "https://maven.google.com"
        }
        flatDir {
            // Add the path to the google sign in library so the local AAR
            // can be found. 'Compile' referencing a relative file doesn't work
            // with AAR files, so we need to use this method instead.
            dirs '../google-signin-cpp'
        }
    }
}

apply plugin: 'com.android.application'

project.ext {
    ndk_dir = project.android.ndkDirectory
    if (ndk_dir == null || !ndk_dir.exists()) {
        ndk_dir = System.getenv('ANDROID_NDK_HOME')
        if (ndk_dir == null || ndk_dir.isEmpty()) {
            throw new StopActionException(
                'Android NDK directory should be specified using the ndk.dir ' +
                'property or ANDROID_NDK_HOME environment variable.')
        }
    }

    if (project.hasProperty("pluginVersion")) {
      version = project.pluginVersion
    } else {
      version '1.0.0'
    }

    baseName = "signin-testapp"
}

android {
    compileSdkVersion 31
    buildToolsVersion '30.0.3'

    sourceSets {
        main {
            manifest.srcFile 'src/android/AndroidManifest.xml'
            java.srcDirs = ['src/android/java']
            jniLibs.srcDirs = ['../plugin/libs']
            res.srcDirs = ['src/android/res']
        }
    }
    lintOptions {
        abortOnError false
    }
    defaultConfig {
        applicationId 'com.google.signin.testapp'
        minSdkVersion 14
        targetSdkVersion 31
        versionName project.version
        archivesBaseName = project.ext.baseName
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11", "-Wall"
            }
        }
        ndk {
            abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }
    externalNativeBuild {
        cmake {
            path "src/android/CMakeLists.txt"
        }
    }
}

dependencies {
    compile 'com.google.android.gms:play-services-auth:19.2.0'
    // Depend on the AAR built with the google sign in library in order to add
    // the java helper classes which are used by the c++ library.
    compile(name:'google-signin-cpp-release', ext:'aar')
}

